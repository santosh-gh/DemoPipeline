trigger:
- master

pool:
  vmImage: ubuntu-latest

jobs:

- job: buildJob
  displayName: Build Job
  steps:
  - task: UseDotNet@2
    displayName: Use .Net 6.x
    inputs:
      packageType: 'sdk'
      version: '6.x'

  - task: DotNetCoreCLI@2
    displayName: 'DotNet Restore Before Build'
    inputs:
      command: 'restore'
      projects: '**/DemoAPI/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'DotNet Build'
    inputs:
      command: 'build'
      arguments: '--no-restore'
      projects: '**/DemoAPI/*.csproj'

- job: testJob
  displayName: Test Job
  dependsOn: buildJob
  #condition: succeeded('build_job')
  steps:
  - task: UseDotNet@2
    displayName: Use .Net 6.x
    inputs:
      packageType: 'sdk'
      version: '6.x'

  - task: DotNetCoreCLI@2
    displayName: 'DotNet Restore Before Test'
    inputs:
      command: 'restore'
      projects: '**/DemoAPI.Test/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'DotNet Test'
    inputs:
      command: 'test'
      arguments: '--no-restore'
      projects: '**/DemoAPI.Test/*.csproj'
      publishTestResults: true

# - job: buildAndPushDockerImageJob
#   displayName: Build & Push Docker Image Job
#   steps:
#   - task: UseDotNet@2
#     displayName: Use .Net 6.x
#     inputs:
#       packageType: 'sdk'
#       version: '6.x'

#   - task: Docker@2
#     displayName: Build & Push DemoAPI Image to ACR
#     inputs:
#       containerRegistry: AcrServiceConnectionDemoAPI
#       repository: 'Demo-api'
#       command: buildAndPush
#       Dockerfile: '**/DemoAPI/Dockerfile'
#       buildContext: $(Build.Repository.LocalPath)
#       tags: $(Build.BuildId)