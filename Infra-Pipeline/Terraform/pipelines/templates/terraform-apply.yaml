parameters:
  - name: backendServiceArm  
  - name: backendAzureRmResourceGroupName  
  - name: backendAzureRmStorageAccountName  
  - name: backendAzureRmContainerName  
  - name: backendAzureRmKey  
  - name: environment
  - name: terraform_version 

jobs:
  - job: terraform_apply
    steps:
      - task: TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: latest #'${{ parameters.terraform_version }}'

      - task: TerraformTaskV3@3
        displayName: 'init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: '${{ parameters.backendServiceArm }}'
          backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
          backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
          backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
          backendAzureRmKey: '${{ parameters.backendAzureRmKey }}' 
          workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-Pipeline/Terraform/terraform'

      - task: TerraformTaskV3@3
        displayName: 'apply'
        condition: and(succeeded(), eq(variables['Action'], 'Apply'))
        inputs:
          provider: 'azurerm'
          command: 'apply'
          commandOptions: '-input=false -auto-approve -var-file="../${{ parameters.environment }}/${{ parameters.environment }}.tfvars"'
          environmentServiceNameAzureRM: '${{ parameters.backendServiceArm }}'
          workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-Pipeline/Terraform/terraform'