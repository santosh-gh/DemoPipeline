parameters:
  - name: backendServiceArm  
  - name: backendAzureRmResourceGroupName  
  - name: backendAzureRmStorageAccountName  
  - name: backendAzureRmContainerName  
  - name: backendAzureRmKey  
  - name: environment
  - name: terraform_version 

jobs:
  - job: terraform_validate
    continueOnError: false
    steps:
    - task: TerraformInstaller@0
      displayName: 'install'
      inputs:
        terraformVersion: latest #'${{ parameters.terraform_version }}'

    - script: |
              ls $(System.DefaultWorkingDirectory)

    - task: TerraformTaskV1@0
      displayName: 'init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: '${{ parameters.backendServiceArm }}'
        backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
        backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
        backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
        backendAzureRmKey: '${{ parameters.backendAzureRmKey }}' 
        workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform/terraform'
    - task: TerraformTaskV1@0
      displayName: 'validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'