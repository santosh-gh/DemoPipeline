name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r)

trigger: 
  - master

pr: none

parameters:

  - name: Action
    displayName: Action
    type: string
    default: 'Plan'
    values:
    - Plan
    - Apply
    - Destroy

variables:
  - group: terraform-aks-variables
  - name: action
    value: ${{ parameters.Action }}

stages :   
  - stage: terraform_validate
    condition: ne('${{ parameters.Action }}', 'Destroy')
    jobs:
      - template: templates/terraform-validate.yaml
        parameters:
          backendServiceArm: $(backendServiceArm)
          backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
          backendAzureRmStorageAccountName:  $(backendAzureRmStorageAccountName)
          backendAzureRmContainerName:  $(backendAzureRmContainerName)
          backendAzureRmKey:  $(backendAzureRmKey)
          environment:  $(environment)
          terraform_version:  $(terraform_version)

  - stage: terraform_plan
    dependsOn: [terraform_validate]
    condition: ne('${{ parameters.Action }}', 'Destroy')
    jobs:
      - template: templates/terraform-plan.yaml
        parameters:
          backendServiceArm: $(backendServiceArm)
          backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
          backendAzureRmStorageAccountName:  $(backendAzureRmStorageAccountName)
          backendAzureRmContainerName:  $(backendAzureRmContainerName)
          backendAzureRmKey:  $(backendAzureRmKey)
          environment:  $(environment)
          terraform_version:  $(terraform_version)

  - stage: terraform_apply
    dependsOn: [terraform_plan]
    condition: ne('${{ parameters.Action }}', 'Destroy')
    jobs:
      - template: templates/terraform-apply.yaml
        parameters:
          backendServiceArm: $(backendServiceArm)
          backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
          backendAzureRmStorageAccountName:  $(backendAzureRmStorageAccountName)
          backendAzureRmContainerName:  $(backendAzureRmContainerName)
          backendAzureRmKey:  $(backendAzureRmKey)
          environment:  $(environment)
          terraform_version:  $(terraform_version)

  - stage: bootstrap
    dependsOn: [terraform_apply]
    condition: ne('${{ parameters.Action }}', 'Destroy')
    jobs:
      - template: templates/az-cli.yaml

  - stage: terraform_destroy
    condition: contains('${{ parameters.Action }}', 'Destroy')
    jobs:
      - template: templates/terraform-destroy.yaml
        parameters:
          backendServiceArm: $(backendServiceArm)
          backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
          backendAzureRmStorageAccountName:  $(backendAzureRmStorageAccountName)
          backendAzureRmContainerName:  $(backendAzureRmContainerName)
          backendAzureRmKey:  $(backendAzureRmKey)
          environment:  $(environment)
          terraform_version:  $(terraform_version)