trigger:
  branches:
    include:
    - master
  paths:
    include:
    - deploy/kubernetes-templates

stages:

  ##############
  # DEPLOYMENT #
  ##############  
  - stage: Deploy_Dev
    jobs:
    - deployment: Deploy_Dev_AKS
      pool:
        vmImage: 'ubuntu-latest'
      environment: aks-aks-helloworld
      strategy:
        runOnce:
          deploy:
            steps:

            - checkout: self
            - script: |
                      ls $(System.DefaultWorkingDirectory)

            - task: KubernetesManifest@0
              displayName: 'AKS HelloWorld Deployment'
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks-cluster-service-connection'
                #namespace: 'aks-helloworld'
                manifests: '$(System.DefaultWorkingDirectory)/App-CD-Pipeline/aks-manifest/kubernetes-templates/deployment.yaml'

            - task: KubernetesManifest@0
              displayName: 'AKS HelloWorld Service'
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'aks-cluster-service-connection'
                #namespace: 'aks-helloworld'
                manifests: '$(System.DefaultWorkingDirectory)/App-CD-Pipeline/aks-manifest/kubernetes-templates/service.yaml'


            # - task: KubernetesManifest@0
            #   displayName: 'Install AKS HelloWorld Deployment 2'
            #   inputs:
            #     action: 'deploy'
            #     #namespace: 'aks-helloworld'
            #     manifests: '$(Build.SourcesDirectory)/deploy/kubernetes-templates/aks-hw-2.yaml'

            # - task: KubernetesManifest@0
            #   displayName: 'Install AKS HelloWorld Ingress'
            #   inputs:
            #     action: 'deploy'
            #     namespace: 'aks-helloworld'
            #     manifests: '$(Build.SourcesDirectory)/deploy/kubernetes-templates/hw-ingress.yaml'